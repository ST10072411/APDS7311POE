version: 2.1  # Specifies the version of CircleCI configuration syntax being used.

jobs:  # Defines a collection of jobs to be executed in the pipeline.
  build:  # The name of the job, which will be run as part of the CI pipeline.
    docker:  # Specifies that the job will run in a Docker container.
      - image: sonarsource/sonar-scanner-cli:10.0.3.1430_5.0.1  # The Docker image used for the job, which contains SonarScanner CLI for running code analysis.

    steps:  # Lists the series of steps to be executed in the build job.
      - checkout  # Checks out the code from the version control repository so that the job can access the source code.

      - run:  # Defines a step that runs a shell command.
          name: Check Current Directory  # A descriptive name for this step.
          command: pwd  # Prints the current working directory to ensure the job is running in the correct location.

      - run:  # Another step for running a shell command.
          name: List Top-Level Directory Structure  # Descriptive name for this step.
          command: ls -lah  # Lists all files and directories in the current directory with detailed information, ensuring the presence of necessary files.

      - run:  # Step to inspect the structure of the "Backend" directory.
          name: List Backend Directory Structure  # Descriptive name for this step.
          command: |  # Indicates a multi-line shell command.
            if [ -d "Backend" ]; then  # Checks if the "Backend" directory exists.
              echo "Backend directory exists. Listing contents:"  # Outputs a message if the directory exists.
              ls -lah Backend  # Lists the contents of the "Backend" directory with detailed information.
            else  # If the "Backend" directory does not exist:
              echo "Backend directory does NOT exist. Please check the sonar.sources path."  # Prints an error message.
            fi  # End of the conditional block.

      - run:  # Step to execute the SonarScanner analysis.
          name: Run SonarScanner  # Descriptive name for this step.
          command: |  # Multi-line shell command.
            SONAR_BRANCH="${CIRCLE_BRANCH:-master}"  # Sets the `SONAR_BRANCH` variable to the current branch name; defaults to "master" if not defined.
            echo "Sonar branch value is: $SONAR_BRANCH"  # Outputs the branch being used for analysis.
            
            # Runs the SonarScanner CLI with various parameters for analysis.
            sonar-scanner \
              -Dsonar.projectKey="ST10072411_APDS7311POE"  # Unique project key for identification on SonarCloud.
              -Dsonar.organization="st10072411"  # Organization key on SonarCloud for grouping related projects.
              -Dsonar.projectName="APDS7311_FinalPOE"  # Name of the project as it will appear on SonarCloud.
              -Dsonar.projectVersion="1.0"  # The version of the project for tracking analysis over time.
              -Dsonar.sources="Backend"  # Path to the source code for analysis.
              -Dsonar.host.url="https://sonarcloud.io"  # URL of the SonarQube or SonarCloud server.
              -Dsonar.login="$SONAR_TOKEN"  # Authentication token for secure access to the SonarCloud account.
              -Dsonar.branch.name="$SONAR_BRANCH"  # Specifies the branch name for the analysis.
              -Dsonar.exclusions="**/android/**,**/ios/**"  # Excludes specific directories (e.g., Android and iOS directories) from the analysis.
              -Dsonar.c.file.suffixes=-  # Disables analysis of C language files.
              -Dsonar.cpp.file.suffixes=-  # Disables analysis of C++ language files.
              -Dsonar.objc.file.suffixes=-  # Disables analysis of Objective-C language files.
