# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

# Define the jobs for the pipeline.
jobs:
  # Job for running a basic "Hello, World!" example.
  say-hello:
    docker:
      - image: cimg/base:stable  # Use a stable CircleCI image.
    steps:
      - checkout  # Check out the code.
      - run:
          name: "Say hello"
          command: echo "Hello, World!"

  # Job for running a SonarQube analysis.
  sonarqube:
    working_directory: ~/build  # Set the working directory.
    docker:
      - image: openjdk:17-jdk-alpine  # Use OpenJDK with Java 17 directly.
    resource_class: small  # Define the resource class.
    steps:
      # Check out the code.
      - checkout
      # Update and upgrade the package index in the Alpine image.
      - run:
          name: "Update and upgrade packages"
          command: |
            apk update && apk upgrade
      # Install additional tools.
      - run:
          name: "Install additional tools"
          command: |
            apk --no-cache add --update openssh git curl nodejs npm unzip bash
      # Set JAVA_HOME based on the verified Java path.
      - run:
          name: "Set JAVA_HOME"
          command: |
            export JAVA_HOME=/opt/openjdk-17
            export PATH="$JAVA_HOME/bin:$PATH"
            echo "JAVA_HOME is set to $JAVA_HOME"
            echo "Updated PATH is set to $PATH"
            java -version  # Verify Java is accessible
      # Download and install SonarQube scanner.
      - run:
          name: "Download and install SonarQube scanner"
          command: |
            wget -O /usr/local/bin/sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
            unzip /usr/local/bin/sonar-scanner-cli.zip -d /usr/local
            mv /usr/local/sonar-scanner-*/ /usr/local/sonar-scanner
            chmod +x /usr/local/sonar-scanner/bin/sonar-scanner
            ln -s /usr/local/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner
            rm -rf /usr/local/sonar-scanner/jre  # Remove embedded JRE if needed.
      # Run SonarQube analysis.
      - run:
          name: "Run SonarQube analysis"
          command: |
            export JAVA_HOME=/opt/openjdk-17
            export PATH="$JAVA_HOME/bin:$PATH"
            echo "JAVA_HOME is set to $JAVA_HOME"
            echo "PATH is set to $PATH"
            java -version
            SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
            echo "Sonar branch value is: $SONAR_BRANCH"
            sonar-scanner \
              -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
              -Dsonar.organization="$SONAR_ORG" \
              -Dsonar.projectName="APDS7311_FinalPOE" \
              -Dsonar.projectVersion="1.0" \
              -Dsonar.sources="backend" \
              -Dsonar.host.url="https://sonarcloud.io" \
              -Dsonar.login="$SONAR_TOKEN" \
              -Dsonar.branch.name="$SONAR_BRANCH" \
              -Dsonar.exclusions="**/android/**,**/ios/**"

# Define the workflow that orchestrates the jobs.
workflows:
  version: 2  # Specify the version of the workflow.
  main-workflow:
    jobs:
      - say-hello  # Run the say-hello job first.
      - sonarqube  # Run the SonarQube job.
