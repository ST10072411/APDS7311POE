version: 2.1  # Specify the version of CircleCI configuration syntax.
jobs:
  build:
    docker:
      - image: sonarsource/sonar-scanner-cli:10.0.3.1430_5.0.1  # Use a specific version of the SonarScanner CLI Docker image.
    steps:
      # Step to check out the code from the repository.
      - checkout
      
      # Step to print the current working directory for debugging purposes.
      - run:
          name: Check Current Directory
          command: pwd  # Print the present working directory to confirm where the job is being executed.

      # Step to list the top-level structure of the project directory for verification.
      - run:
          name: List Top-Level Directory Structure
          command: ls -lah  # List all files and directories at the top level with detailed information.

      # Step to verify and list the contents of the "Backend" directory.
      - run:
          name: List Backend Directory Structure
          command: |
            # Check if the "Backend" directory exists.
            if [ -d "Backend" ]; then
              echo "Backend directory exists. Listing contents:"
              ls -lah Backend  # List all files and subdirectories within the "Backend" directory.
            else
              # Print a warning message if the "Backend" directory is not found.
              echo "Backend directory does NOT exist. Please check the sonar.sources path."
            fi

      # Step to run the SonarScanner analysis with environment variables for configuration.
      - run:
          name: Run SonarScanner
          command: |
            # Set the branch name variable with a default value of "master" if CIRCLE_BRANCH is not set.
            SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
            echo "Sonar branch value is: $SONAR_BRANCH"  # Print the branch name for debugging.

            # Execute the SonarScanner analysis with environment variables for dynamic configuration.
            sonar-scanner \
              -Dsonar.projectKey="$SONAR_PROJECT_KEY"\  # Use the project key stored as an environment variable.
              -Dsonar.organization="$SONAR_ORG"\  # Use the organization key stored as an environment variable.
              -Dsonar.projectName="$SONAR_PROJECT_NAME"\  # Use the project name stored as an environment variable.
              -Dsonar.projectVersion="1.0"\  # Specify the project version (can be parameterized if needed).
              -Dsonar.sources="Backend"\  # Define the source directory for analysis.
              -Dsonar.host.url="https://sonarcloud.io"\  # The URL of the SonarCloud instance.
              -Dsonar.login="$SONAR_TOKEN"\  # Use the authentication token stored as an environment variable.
              -Dsonar.branch.name="$SONAR_BRANCH"\  # Set the branch name dynamically.
              -Dsonar.exclusions="**/android/**,**/ios/**"\  # Exclude specified directories from analysis.
              -Dsonar.c.file.suffixes=-\  # Exclude C files from analysis.
              -Dsonar.cpp.file.suffixes=-\  # Exclude C++ files from analysis.
              -Dsonar.objc.file.suffixes=-  # Exclude Objective-C files from analysis.
